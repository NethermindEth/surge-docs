"use strict";(self.webpackChunksurge_docs=self.webpackChunksurge_docs||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction to Surge","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"About","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Based Rollups","href":"/docs/about/based-rollups","docId":"about/based-rollups","unlisted":false},{"type":"link","label":"Stage 2","href":"/docs/about/stage-2","docId":"about/stage-2","unlisted":false},{"type":"link","label":"Surge & Nethermind","href":"/docs/about/nethermind","docId":"about/nethermind","unlisted":false},{"type":"link","label":"Surge Architecture","href":"/docs/about/architecture","docId":"about/architecture","unlisted":false}]},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Run your own Surge Devnet","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deploy L1","href":"/docs/guides/running-surge/deploy-l1","docId":"guides/running-surge/deploy-l1","unlisted":false},{"type":"link","label":"Deploy Protocols on L1","href":"/docs/guides/running-surge/deploy-l1-protocols","docId":"guides/running-surge/deploy-l1-protocols","unlisted":false},{"type":"link","label":"Prepare L2 Genesis","href":"/docs/guides/running-surge/prepare-l2-genesis","docId":"guides/running-surge/prepare-l2-genesis","unlisted":false},{"type":"category","label":"Set up a Prover","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deploy SGX Prover","href":"/docs/guides/running-surge/provers/sgx-prover","docId":"guides/running-surge/provers/sgx-prover","unlisted":false},{"type":"link","label":"Deploy RISC0 Prover","href":"/docs/guides/running-surge/provers/risc0-prover","docId":"guides/running-surge/provers/risc0-prover","unlisted":false},{"type":"link","label":"Deploy SP1 Prover","href":"/docs/guides/running-surge/provers/sp1-prover","docId":"guides/running-surge/provers/sp1-prover","unlisted":false}],"href":"/docs/guides/running-surge/provers/"},{"type":"link","label":"Deploy L2","href":"/docs/guides/running-surge/deploy-l2","docId":"guides/running-surge/deploy-l2","unlisted":false},{"type":"link","label":"Deploy Protocols on L2","href":"/docs/guides/running-surge/deploy-l2-protocols","docId":"guides/running-surge/deploy-l2-protocols","unlisted":false},{"type":"link","label":"Deploy Relayer","href":"/docs/guides/running-surge/deploy-relayer","docId":"guides/running-surge/deploy-relayer","unlisted":false},{"type":"link","label":"Deploy Bridge UI","href":"/docs/guides/running-surge/deploy-bridge-ui","docId":"guides/running-surge/deploy-bridge-ui","unlisted":false}],"href":"/docs/guides/running-surge/"},{"type":"link","label":"Run Surge on Hoodi","href":"/docs/guides/surge-on-hoodi/","docId":"guides/surge-on-hoodi/surge-on-hoodi","unlisted":false},{"type":"link","label":"Deploying your DApp on Surge","href":"/docs/guides/deploy-on-surge","docId":"guides/deploy-on-surge","unlisted":false}]},{"type":"category","label":"Troubleshooting","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Error Codes","href":"/docs/troubleshooting/error-codes","docId":"troubleshooting/error-codes","unlisted":false},{"type":"link","label":"Common Devnet Issues","href":"/docs/troubleshooting/common-devnet-issues","docId":"troubleshooting/common-devnet-issues","unlisted":false}],"href":"/docs/troubleshooting/"}]},"docs":{"about/architecture":{"id":"about/architecture","title":"Surge Architecture","description":"Surge Architecture","sidebar":"tutorialSidebar"},"about/based-rollups":{"id":"about/based-rollups","title":"Based Rollups","description":"What Are Based Rollups, and Why Do They Matter?","sidebar":"tutorialSidebar"},"about/nethermind":{"id":"about/nethermind","title":"Surge & Nethermind","description":"Surge leverages Nethermind as its primary Ethereum execution client. Nethermind is a high-performance client designed for speed, efficiency, and reliability \u2013 all essential qualities for any rollup aiming to process transactions at scale.","sidebar":"tutorialSidebar"},"about/stage-2":{"id":"about/stage-2","title":"Stage 2","description":"Surge stands out by embracing a Stage 2 governance model from the very beginning, referencing the L2Beat\u2019s \u201cStages\u201d framework that evaluates rollup maturity. By focusing on immutability and self-executing code, Surge mitigates governance risks commonly seen in other rollups where multi-sigs or admin keys can push upgrades before users can fully withdraw their funds.","sidebar":"tutorialSidebar"},"guides/deploy-on-surge":{"id":"guides/deploy-on-surge","title":"Deploying your DApp on Surge","description":"To deploy your DApp on Surge follow these steps:","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-bridge-ui":{"id":"guides/running-surge/deploy-bridge-ui","title":"Deploy Bridge UI","description":"This guide walks you through deploying the Surge Bridge UI, including all necessary configurations and services.","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-l1":{"id":"guides/running-surge/deploy-l1","title":"Deploy L1","description":"This guide explains how to deploy an L1 development network using Kurtosis. This setup includes deploying the Taiko protocol on L1, which is required for launching the Surge L2 development network. By the end, you\'ll have a fully functional L1 environment running within a Kurtosis enclave.","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-l1-protocols":{"id":"guides/running-surge/deploy-l1-protocols","title":"Deploy Protocols on L1","description":"If you\'re using the Kurtosis Package to deploy L1, you can skip this section.","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-l2":{"id":"guides/running-surge/deploy-l2","title":"Deploy L2","description":"This guide walks you through the process of deploying the L2 network components using Simple Surge Node.","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-l2-protocols":{"id":"guides/running-surge/deploy-l2-protocols","title":"Deploy Protocols on L2","description":"This guide explains how to deploy and configure the bridge and signal service protocols on L2.","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-relayer":{"id":"guides/running-surge/deploy-relayer","title":"Deploy Relayer","description":"This guide walks you through the process of deploying and configuring the Surge Relayer.","sidebar":"tutorialSidebar"},"guides/running-surge/prepare-l2-genesis":{"id":"guides/running-surge/prepare-l2-genesis","title":"Prepare L2 Genesis","description":"If you\'re using simple-surge-node to deploy L2, you can skip this section since simple-surge-node repository already includes a ready-to-use chainspec.json file.","sidebar":"tutorialSidebar"},"guides/running-surge/provers/index":{"id":"guides/running-surge/provers/index","title":"Set up a Prover","description":"Complete guide for setting up a Surge prover:","sidebar":"tutorialSidebar"},"guides/running-surge/provers/risc0-prover":{"id":"guides/running-surge/provers/risc0-prover","title":"Deploy RISC0 Prover","description":"Prerequisites","sidebar":"tutorialSidebar"},"guides/running-surge/provers/sgx-prover":{"id":"guides/running-surge/provers/sgx-prover","title":"Deploy SGX Prover","description":"Prerequisites","sidebar":"tutorialSidebar"},"guides/running-surge/provers/sp1-prover":{"id":"guides/running-surge/provers/sp1-prover","title":"Deploy SP1 Prover","description":"Prerequisites","sidebar":"tutorialSidebar"},"guides/running-surge/running-surge":{"id":"guides/running-surge/running-surge","title":"Run your own Surge Devnet","description":"This guide walks you through setting up and running your own Surge rollup development network.","sidebar":"tutorialSidebar"},"guides/surge-on-hoodi/surge-on-hoodi":{"id":"guides/surge-on-hoodi/surge-on-hoodi","title":"Run Surge on Hoodi","description":"","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction to Surge","description":"Surge is a based rollup template built on the Taiko stack. It adopts the Stage 2 security framework and relies on Ethereum\u2019s validators \u2014 rather than a centralized sequencer \u2014 for transaction ordering. This approach ensures robust decentralization and censorship resistance, aligning with Ethereum\u2019s core principles and security guarantees.","sidebar":"tutorialSidebar"},"troubleshooting/common-devnet-issues":{"id":"troubleshooting/common-devnet-issues","title":"Common Devnet Issues","description":"This page contains common issues while setting up the devnet and their solutions.","sidebar":"tutorialSidebar"},"troubleshooting/error-codes":{"id":"troubleshooting/error-codes","title":"Error Codes","description":"This page contains a comprehensive list of error codes used in protocols. These codes are automatically generated from the source code.","sidebar":"tutorialSidebar"},"troubleshooting/index":{"id":"troubleshooting/index","title":"Troubleshooting","description":"Find solutions and guidance for common issues when working with Surge.","sidebar":"tutorialSidebar"}}}}')}}]);