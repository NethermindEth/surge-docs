"use strict";(self.webpackChunksurge_docs=self.webpackChunksurge_docs||[]).push([[115],{210:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=n(4848),r=n(8453);const i={sidebar_position:1,title:"Based Rollups"},l="Based Rollups",o={id:"About/based-rollups",title:"Based Rollups",description:"What Are Based Rollups, and Why Do They Matter?",source:"@site/docs/About/based-rollups.md",sourceDirName:"About",slug:"/About/based-rollups",permalink:"/docs/About/based-rollups",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/surge/tree/main/docs/docs/About/based-rollups.md",tags:[],version:"current",lastUpdatedAt:1742548297e3,sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Based Rollups"},sidebar:"tutorialSidebar",previous:{title:"Introduction to Surge",permalink:"/docs/intro"},next:{title:"Stage 2",permalink:"/docs/About/stage-2"}},a={},d=[{value:"What Are Based Rollups, and Why Do They Matter?",id:"what-are-based-rollups-and-why-do-they-matter",level:2},{value:"The Problem with Conventional Rollups",id:"the-problem-with-conventional-rollups",level:3},{value:"How Based Rollups Address This",id:"how-based-rollups-address-this",level:3},{value:"Why Surge Uses a Based Rollup Model",id:"why-surge-uses-a-based-rollup-model",level:3},{value:"Comparing Based and Non-Based Rollups",id:"comparing-based-and-non-based-rollups",level:2}];function c(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"based-rollups",children:"Based Rollups"})}),"\n",(0,t.jsx)(s.h2,{id:"what-are-based-rollups-and-why-do-they-matter",children:"What Are Based Rollups, and Why Do They Matter?"}),"\n",(0,t.jsxs)(s.p,{children:["Based rollups are an approach to Layer 2 scaling where the ",(0,t.jsx)(s.strong,{children:"centralized sequencer"})," is removed entirely. Instead of a single entity controlling transaction ordering, Ethereum\u2019s own Layer 1 block-building process handles the job. This design is closely tied to ",(0,t.jsx)(s.a,{href:"https://ethereum.org/en/roadmap/pbs/",children:"Proposer-Builder Separation (PBS)"}),", a concept in Ethereum\u2019s roadmap that aims to keep block-building open and permissionless."]}),"\n",(0,t.jsx)(s.h3,{id:"the-problem-with-conventional-rollups",children:"The Problem with Conventional Rollups"}),"\n",(0,t.jsx)(s.p,{children:"Traditional rollups often rely on a centralized sequencer. Although this setup reduces latency and can lower transaction costs, it also:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Introduces a single point of failure."}),"\n",(0,t.jsx)(s.li,{children:"Exposes users to potential censorship and transaction reordering."}),"\n",(0,t.jsx)(s.li,{children:"Consolidates power in the hands of the sequencer."}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"how-based-rollups-address-this",children:"How Based Rollups Address This"}),"\n",(0,t.jsx)(s.p,{children:"By tying L2 transaction ordering directly to Ethereum\u2019s decentralized block builders, based rollups inherit Ethereum\u2019s own security and censorship-resistance guarantees:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"No Central Authority"}),": The L1 block-building process takes responsibility for ordering transactions, eliminating the centralized sequencer."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Censorship Resistance"}),": If Ethereum itself is censorship-resistant, the L2 automatically gains that protection."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Better Alignment With Ethereum"}),": Validators, builders, and searchers collectively maintain both L1 and L2 transaction inclusion, strengthening decentralization."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"why-surge-uses-a-based-rollup-model",children:"Why Surge Uses a Based Rollup Model"}),"\n",(0,t.jsx)(s.p,{children:"Surge fully embraces this model for its rollup architecture. By integrating with Ethereum\u2019s existing infrastructure:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["L2 transactions enter the ",(0,t.jsx)(s.strong,{children:"same permissionless block-building pipeline"})," as L1."]}),"\n",(0,t.jsx)(s.li,{children:"No single entity can reorder, censor, or halt transactions."}),"\n",(0,t.jsxs)(s.li,{children:["Surge becomes ",(0,t.jsx)(s.strong,{children:"as decentralized as Ethereum itself"}),", preserving user trust and security."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"comparing-based-and-non-based-rollups",children:"Comparing Based and Non-Based Rollups"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Based Rollups"}),": Transaction ordering is done by Ethereum\u2019s decentralized validators and block builders, leveraging PBS to maintain fairness and trustlessness."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{alt:"Based Rollups: L2 transactions enter the same permissionless block-building pipeline as L1.",src:n(6184).A+"",width:"1381",height:"358"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Conventional Rollups"}),": A centralized sequencer has the final say on transaction order before batches go to L1, introducing potential risks of manipulation or censorship."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{alt:"Conventional Non-Based Rollups: A centralized sequencer decides transaction ordering before submitting them to L1.",src:n(6531).A+"",width:"1510",height:"355"})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},6184:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/based-rollups-8d732e12a5ece6c995e8470bc908133d.png"},6531:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/conventional-rollups-dabb1f792d635cb1423378546990d62e.png"},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>o});var t=n(6540);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);