"use strict";(self.webpackChunksurge_docs=self.webpackChunksurge_docs||[]).push([[296],{6361:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Guides/run-a-node","title":"Run a Node","description":"This guide will help you start up a Surge RPC node using simple-surge-node.","source":"@site/docs/Guides/run-a-node.mdx","sourceDirName":"Guides","slug":"/Guides/run-a-node","permalink":"/docs/Guides/run-a-node","draft":false,"unlisted":false,"editUrl":"https://github.com/NethermindEth/surge/tree/main/docs/docs/Guides/run-a-node.mdx","tags":[],"version":"current","lastUpdatedAt":1731341310000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Sequencer Guide","permalink":"/docs/core-concepts/sequencing"},"next":{"title":"Set up a Prover","permalink":"/docs/Guides/prover-setup"}}');var o=r(4848),i=r(8453);const d={sidebar_position:1},l="Run a Node",t={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Software",id:"software",level:3},{value:"Hardware",id:"hardware",level:3},{value:"Run a Surge node with simple-surge-node",id:"run-a-surge-node-with-simple-surge-node",level:2},{value:"1. Clone simple-surge-node repository",id:"1-clone-simple-surge-node-repository",level:3},{value:"2. Create your .env file",id:"2-create-your-env-file",level:3},{value:"3. Run docker compose to start the node",id:"3-run-docker-compose-to-start-the-node",level:3},{value:"4. Verify Node Health",id:"4-verify-node-health",level:3},{value:"Stop the node",id:"stop-the-node",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"run-a-node",children:"Run a Node"})}),"\n",(0,o.jsx)(n.p,{children:"This guide will help you start up a Surge RPC node using simple-surge-node."}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(n.h3,{id:"software",children:"Software"}),"\n",(0,o.jsx)(n.p,{children:"Be sure to have the following software installed:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"git"})," version 2.x or higher"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"docker"})," version 24.0 or higher"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"docker compose"})," version 2.x or higher"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"hardware",children:"Hardware"}),"\n",(0,o.jsx)(n.p,{children:"Any modern computer with 2 cores CPU and 4GB RAM will be sufficient."}),"\n",(0,o.jsx)(n.h2,{id:"run-a-surge-node-with-simple-surge-node",children:"Run a Surge node with simple-surge-node"}),"\n",(0,o.jsx)(n.h3,{id:"1-clone-simple-surge-node-repository",children:"1. Clone simple-surge-node repository"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/NethermindEth/simple-surge-node\ncd simple-surge-node\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-create-your-env-file",children:"2. Create your .env file"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cp .env.sample .env\n"})}),"\n",(0,o.jsx)(n.p,{children:"Edit the .env file to set the correct values for your environment."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nano .env\n"})}),"\n",(0,o.jsx)(n.p,{children:"The following environment variables need to be configured:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"L1_ENDPOINT_HTTP"}),": HTTP endpoint for your L1 node"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"L1_ENDPOINT_WS"}),": WebSocket endpoint for your L1 node"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"L1_BEACON_HTTP"}),": Beacon chain HTTP endpoint"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"You need to provide locally running L1 node endpoints or use a public L1 node."}),"\n",(0,o.jsx)(n.p,{children:"Examples:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Local L1 node\nL1_ENDPOINT_HTTP=http://192.168.1.10:8545\nL1_ENDPOINT_WS=ws://192.168.1.10:8546\nL1_BEACON_HTTP=http://192.168.1.10:5052\n\n# Using Infura\nL1_ENDPOINT_HTTP=https://mainnet.infura.io/v3/YOUR-PROJECT-ID\nL1_ENDPOINT_WS=wss://mainnet.infura.io/ws/v3/YOUR-PROJECT-ID\nL1_BEACON_HTTP=https://beacon.infura.io\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-run-docker-compose-to-start-the-node",children:"3. Run docker compose to start the node"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose up -d\n"})}),"\n",(0,o.jsx)(n.p,{children:"That's it! The apropriate images will be downloaded and docker services will be started."}),"\n",(0,o.jsx)(n.h3,{id:"4-verify-node-health",children:"4. Verify Node Health"}),"\n",(0,o.jsx)(n.p,{children:"You can verify your node is running correctly by:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Checking if blocks are being synced:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'curl http://localhost:8547 \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  --data \'{"method":"eth_blockNumber","params":[],"id":1,"jsonrpc":"2.0"}\'\n'})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Monitoring the dashboard at ",(0,o.jsx)(n.a,{href:"http://localhost:3001/d/L2ExecutionEngine/l2-execution-engine-overview",children:"http://localhost:3001/d/L2ExecutionEngine/l2-execution-engine-overview"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Checking service logs:"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose logs -f\n"})}),"\n",(0,o.jsx)(n.h2,{id:"stop-the-node",children:"Stop the node"}),"\n",(0,o.jsx)(n.p,{children:"Stop the node with command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose down\n"})}),"\n",(0,o.jsx)(n.p,{children:"To remove the volumes and start fresh next time:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose down -v\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var s=r(6540);const o={},i=s.createContext(o);function d(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);