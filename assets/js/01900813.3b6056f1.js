"use strict";(self.webpackChunksurge_docs=self.webpackChunksurge_docs||[]).push([[77],{9893:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var r=i(4848),o=i(8453);const s={sidebar_position:3},t="Block Proposer Guide",c={id:"core-concepts/sequencing",title:"Block Proposer Guide",description:"In Surge, anyone can act as a block proposer, being responsible for processing transactions and managing block production on the L2 network. This guide explains how block proposing works and its fee structure.",source:"@site/docs/core-concepts/sequencing.mdx",sourceDirName:"core-concepts",slug:"/core-concepts/sequencing",permalink:"/docs/core-concepts/sequencing",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/surge/tree/main/docs/docs/core-concepts/sequencing.mdx",tags:[],version:"current",lastUpdatedAt:1737611289e3,sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Prover Setup",permalink:"/docs/core-concepts/proposing"},next:{title:"Deploy L1",permalink:"/docs/Guides/deploy-l1"}},l={},a=[{value:"Overview",id:"overview",level:2},{value:"Fee Structure",id:"fee-structure",level:2},{value:"Base Fee Distribution",id:"base-fee-distribution",level:3},{value:"Priority Fees",id:"priority-fees",level:3},{value:"Fee Components",id:"fee-components",level:3},{value:"Block Production",id:"block-production",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Advanced Features",id:"advanced-features",level:2}];function d(e){const n={admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"block-proposer-guide",children:"Block Proposer Guide"})}),"\n",(0,r.jsx)(n.p,{children:"In Surge, anyone can act as a block proposer, being responsible for processing transactions and managing block production on the L2 network. This guide explains how block proposing works and its fee structure."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Block proposers:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Order and execute user transactions"}),"\n",(0,r.jsx)(n.li,{children:"Manage block production"}),"\n",(0,r.jsx)(n.li,{children:"Handle fee distribution"}),"\n",(0,r.jsx)(n.li,{children:"Maintain L2 chain efficiency"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"fee-structure",children:"Fee Structure"}),"\n",(0,r.jsx)(n.h3,{id:"base-fee-distribution",children:"Base Fee Distribution"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"75% goes to the coinbase address"}),"\n",(0,r.jsx)(n.li,{children:"25% goes to the treasury"}),"\n",(0,r.jsx)(n.li,{children:"Distribution is handled through the proving mechanism"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"priority-fees",children:"Priority Fees"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"100% of priority fees go to the coinbase"}),"\n",(0,r.jsx)(n.li,{children:"Proposers can provide additional tips during block proposal on L1"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"fee-components",children:"Fee Components"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Base Fee"}),": Automatically adjusted based on network congestion"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Priority Fee"}),": Optional tip to incentivize faster inclusion"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extra Tips"}),": Additional proposer incentives for L2 PBS (Proposer Builder Separation)"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Fee distribution is built into the proving mechanism rather than handled by smart contracts."})}),"\n",(0,r.jsx)(n.h2,{id:"block-production",children:"Block Production"}),"\n",(0,r.jsx)(n.p,{children:"Block proposers manage block production with the following parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Configurable target gas per block"}),"\n",(0,r.jsx)(n.li,{children:"Adjustable base fee calculations"}),"\n",(0,r.jsx)(n.li,{children:"Flexible fee distribution ratios"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Block proposers can adjust various parameters including:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Target gas limits"}),"\n",(0,r.jsx)(n.li,{children:"Fee sharing percentages"}),"\n",(0,r.jsx)(n.li,{children:"Block production rates"}),"\n",(0,r.jsx)(n.li,{children:"Priority fee minimums"}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"Always monitor system metrics when adjusting block proposer parameters to maintain optimal performance."})}),"\n",(0,r.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Custom executor implementation"}),"\n",(0,r.jsx)(n.li,{children:"Configurable base fee sharing"}),"\n",(0,r.jsx)(n.li,{children:"Support for proposer builder separation"}),"\n",(0,r.jsx)(n.li,{children:"Flexible treasury management"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For detailed technical specifications and deployment instructions, please contact the Surge team."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var r=i(6540);const o={},s=r.createContext(o);function t(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);