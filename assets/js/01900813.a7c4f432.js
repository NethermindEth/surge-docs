"use strict";(self.webpackChunksurge_docs=self.webpackChunksurge_docs||[]).push([[77],{2381:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"core-concepts/sequencing","title":"Sequencer Guide","description":"The Surge sequencer is responsible for processing transactions and managing block production on the L2 network. This guide explains how the sequencer works and its fee structure.","source":"@site/docs/core-concepts/sequencing.mdx","sourceDirName":"core-concepts","slug":"/core-concepts/sequencing","permalink":"/docs/core-concepts/sequencing","draft":false,"unlisted":false,"editUrl":"https://github.com/NethermindEth/surge/tree/main/docs/docs/core-concepts/sequencing.mdx","tags":[],"version":"current","lastUpdatedAt":1731341310000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Prover Setup","permalink":"/docs/core-concepts/proposing"},"next":{"title":"Run a Node","permalink":"/docs/Guides/run-a-node"}}');var s=i(4848),t=i(8453);const o={sidebar_position:3},c="Sequencer Guide",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Fee Structure",id:"fee-structure",level:2},{value:"Base Fee Distribution",id:"base-fee-distribution",level:3},{value:"Priority Fees",id:"priority-fees",level:3},{value:"Fee Components",id:"fee-components",level:3},{value:"Block Production",id:"block-production",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Advanced Features",id:"advanced-features",level:2}];function a(e){const n={admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"sequencer-guide",children:"Sequencer Guide"})}),"\n",(0,s.jsx)(n.p,{children:"The Surge sequencer is responsible for processing transactions and managing block production on the L2 network. This guide explains how the sequencer works and its fee structure."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"The sequencer:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Orders and executes user transactions"}),"\n",(0,s.jsx)(n.li,{children:"Manages block production"}),"\n",(0,s.jsx)(n.li,{children:"Handles fee distribution"}),"\n",(0,s.jsx)(n.li,{children:"Maintains L2 chain efficiency"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"fee-structure",children:"Fee Structure"}),"\n",(0,s.jsx)(n.h3,{id:"base-fee-distribution",children:"Base Fee Distribution"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"75% goes to the coinbase address"}),"\n",(0,s.jsx)(n.li,{children:"25% goes to the treasury"}),"\n",(0,s.jsx)(n.li,{children:"Distribution is handled through the proving mechanism"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"priority-fees",children:"Priority Fees"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"100% of priority fees go to the coinbase"}),"\n",(0,s.jsx)(n.li,{children:"Proposers can provide additional tips during block proposal on L1"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"fee-components",children:"Fee Components"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Base Fee"}),": Automatically adjusted based on network congestion"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Priority Fee"}),": Optional tip to incentivize faster inclusion"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extra Tips"}),": Additional proposer incentives for L2 PBS (Proposer Builder Separation)"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Fee distribution is built into the proving mechanism rather than handled by smart contracts."})}),"\n",(0,s.jsx)(n.h2,{id:"block-production",children:"Block Production"}),"\n",(0,s.jsx)(n.p,{children:"The sequencer manages block production with the following parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Configurable target gas per block"}),"\n",(0,s.jsx)(n.li,{children:"Adjustable base fee calculations"}),"\n",(0,s.jsx)(n.li,{children:"Flexible fee distribution ratios"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Sequencer operators can adjust various parameters including:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Target gas limits"}),"\n",(0,s.jsx)(n.li,{children:"Fee sharing percentages"}),"\n",(0,s.jsx)(n.li,{children:"Block production rates"}),"\n",(0,s.jsx)(n.li,{children:"Priority fee minimums"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"Always monitor system metrics when adjusting sequencer parameters to maintain optimal performance."})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Custom executor implementation"}),"\n",(0,s.jsx)(n.li,{children:"Configurable base fee sharing"}),"\n",(0,s.jsx)(n.li,{children:"Support for proposer builder separation"}),"\n",(0,s.jsx)(n.li,{children:"Flexible treasury management"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For detailed technical specifications and deployment instructions, please contact the Surge team."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var r=i(6540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);