"use strict";(self.webpackChunksurge_docs=self.webpackChunksurge_docs||[]).push([[11],{3404:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>t,metadata:()=>c,toc:()=>d});var o=r(4848),i=r(8453);const t={sidebar_position:2},s="Prover Setup",c={id:"core-concepts/proposing",title:"Prover Setup",description:"Surge supports two types of provers for block verification:",source:"@site/docs/core-concepts/proposing.mdx",sourceDirName:"core-concepts",slug:"/core-concepts/proposing",permalink:"/docs/core-concepts/proposing",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/surge/tree/main/docs/docs/core-concepts/proposing.mdx",tags:[],version:"current",lastUpdatedAt:1736315056e3,sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Bridging",permalink:"/docs/core-concepts/bridging"},next:{title:"Block Proposer Guide",permalink:"/docs/core-concepts/sequencing"}},l={},d=[{value:"Nethermind TEE Prover",id:"nethermind-tee-prover",level:2},{value:"Components",id:"components",level:3},{value:"Setup Requirements",id:"setup-requirements",level:3},{value:"RethZk Prover",id:"rethzk-prover",level:2},{value:"Key Features",id:"key-features",level:3},{value:"Prover Economics",id:"prover-economics",level:2}];function a(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"prover-setup",children:"Prover Setup"})}),"\n",(0,o.jsx)(n.p,{children:"Surge supports two types of provers for block verification:"}),"\n",(0,o.jsx)(n.h2,{id:"nethermind-tee-prover",children:"Nethermind TEE Prover"}),"\n",(0,o.jsx)(n.p,{children:"The Nethermind TEE (Trusted Execution Environment) Prover leverages secure hardware enclaves for block verification. This prover is currently in development with the following features:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Attestation extraction and verification"}),"\n",(0,o.jsx)(n.li,{children:"RPC snooping for payload execution interception"}),"\n",(0,o.jsx)(n.li,{children:"TD (Transaction Data) attestations for block verification"}),"\n",(0,o.jsx)(n.li,{children:"Smart contract integration for attestation verification"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"RPC Snooper"}),": Intercepts payload executions between CL-EL"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Attestation System"}),": Stores and verifies payload executions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"TDX Verifier"}),": Integrates with core rollup contracts"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Cloud Deployment"}),": Supports both Azure and GCP environments"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"setup-requirements",children:"Setup Requirements"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Intel TDX-compatible hardware"}),"\n",(0,o.jsx)(n.li,{children:"Secure enclave configuration"}),"\n",(0,o.jsx)(n.li,{children:"Network connectivity to L1 and L2 nodes"}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"Detailed setup instructions will be provided once the TEE prover development is complete."})}),"\n",(0,o.jsx)(n.h2,{id:"rethzk-prover",children:"RethZk Prover"}),"\n",(0,o.jsx)(n.p,{children:"The RethZk Prover is an alternative proving system based on zero-knowledge proofs. This system is designed to provide:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"High performance block verification"}),"\n",(0,o.jsx)(n.li,{children:"Compatible with Ethereum's execution environment"}),"\n",(0,o.jsx)(n.li,{children:"Efficient proof generation and verification"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"key-features",children:"Key Features"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Zero-knowledge proof generation"}),"\n",(0,o.jsx)(n.li,{children:"Optimized for EVM compatibility"}),"\n",(0,o.jsx)(n.li,{children:"Scalable proof verification"}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{title:"Development Status",type:"note",children:(0,o.jsx)(n.p,{children:"The RethZk Prover is currently under active development. Setup instructions and deployment guides will be provided upon completion."})}),"\n",(0,o.jsx)(n.h2,{id:"prover-economics",children:"Prover Economics"}),"\n",(0,o.jsx)(n.p,{children:"Provers play a crucial role in the Surge ecosystem and are compensated through:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A share of base fees from transaction processing"}),"\n",(0,o.jsx)(n.li,{children:"Additional rewards for timely proof generation"}),"\n",(0,o.jsx)(n.li,{children:"Performance-based incentives"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["For detailed information about prover compensation and economics, please refer to the ",(0,o.jsx)(n.a,{href:"/docs/core-concepts",children:"Core Concepts"})," section."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var o=r(6540);const i={},t=o.createContext(i);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);