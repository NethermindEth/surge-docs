"use strict";(self.webpackChunksurge_docs=self.webpackChunksurge_docs||[]).push([[508],{8390:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/running-surge/provers/index","title":"Set up a Prover","description":"You can skip launching any provers in a local devnet if you only want to test basic transaction flow and block proposals. However, without a prover:","source":"@site/docs/guides/running-surge/provers/index.mdx","sourceDirName":"guides/running-surge/provers","slug":"/guides/running-surge/provers/","permalink":"/docs/guides/running-surge/provers/","draft":false,"unlisted":false,"editUrl":"https://github.com/NethermindEth/surge/tree/main/docs/docs/guides/running-surge/provers/index.mdx","tags":[],"version":"current","lastUpdatedAt":1743516923000,"sidebarPosition":4,"frontMatter":{"title":"Set up a Prover","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Prepare L2 Genesis","permalink":"/docs/guides/running-surge/prepare-l2-genesis"},"next":{"title":"Deploy SGX Prover","permalink":"/docs/guides/running-surge/provers/sgx-prover"}}');var s=n(4848),o=n(8453);const t={title:"Set up a Prover",sidebar_position:4},a="Set up a Prover",l={},c=[];function d(e){const r={a:"a",admonition:"admonition",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"set-up-a-prover",children:"Set up a Prover"})}),"\n",(0,s.jsxs)(r.admonition,{type:"note",children:[(0,s.jsxs)(r.p,{children:["You ",(0,s.jsx)(r.strong,{children:"can"})," skip launching any provers in a local devnet if you only want to test basic transaction flow and block proposals. However, without a prover:"]}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"No L2 blocks will ever be proven or finalized on-chain."}),"\n",(0,s.jsx)(r.li,{children:"Any actions requiring finalized state (e.g., bridging back to L1, claiming certain rewards) will remain pending or be unavailable."}),"\n"]}),(0,s.jsx)(r.p,{children:"Launching a prover locally can be challenging:"}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Hardware Requirements"}),": Certain provers (e.g., SGX) need specialized hardware or enclaves."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Complex Setup"}),": Installing and configuring toolchains, drivers, or required libraries can be time-consuming."]}),"\n"]})]}),"\n",(0,s.jsx)(r.p,{children:"In a based rollup like Surge, provers generate proofs that validate L2 blocks proposed by the proposer. These proofs are submitted on-chain via a prover-relayer which marks the blocks as verified (finalized)."}),"\n",(0,s.jsx)(r.p,{children:"Without a prover submitting proofs, blocks remain unverified on-chain, limiting certain functionality (like finalizing cross-chain actions)."}),"\n",(0,s.jsx)(r.p,{children:"This guide explains how to launch and configure a Surge prover. You can choose any of the following provers that Surge supports, each of which has different requirements:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/docs/guides/running-surge/provers/sgx-prover",children:"SGX Prover"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/docs/guides/running-surge/provers/risc0-prover",children:"RISC0 Prover"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/docs/guides/running-surge/provers/sp1-prover",children:"SP1 Prover"})}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>a});var i=n(6540);const s={},o=i.createContext(s);function t(e){const r=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(o.Provider,{value:r},e.children)}}}]);