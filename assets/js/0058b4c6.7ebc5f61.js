"use strict";(self.webpackChunksurge_docs=self.webpackChunksurge_docs||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction to Surge","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"About","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Based Rollups","href":"/docs/about/based-rollups","docId":"about/based-rollups","unlisted":false},{"type":"link","label":"Fully Decentralized From Day 1","href":"/docs/about/stage-2","docId":"about/stage-2","unlisted":false},{"type":"link","label":"Surge & Nethermind Client","href":"/docs/about/nethermind","docId":"about/nethermind","unlisted":false},{"type":"link","label":"Surge Architecture","href":"/docs/about/architecture","docId":"about/architecture","unlisted":false}]},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Run Surge on Hoodi","href":"/docs/guides/surge-on-hoodi/","docId":"guides/surge-on-hoodi/surge-on-hoodi","unlisted":false},{"type":"category","label":"Run your own Surge Devnet","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deploy L1","href":"/docs/guides/running-surge/deploy-l1","docId":"guides/running-surge/deploy-l1","unlisted":false},{"type":"link","label":"Deploy Protocols on L1","href":"/docs/guides/running-surge/deploy-l1-protocols","docId":"guides/running-surge/deploy-l1-protocols","unlisted":false},{"type":"link","label":"Prepare L2 Genesis","href":"/docs/guides/running-surge/prepare-l2-genesis","docId":"guides/running-surge/prepare-l2-genesis","unlisted":false},{"type":"category","label":"Set up a Prover","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deploy SGX Prover","href":"/docs/guides/running-surge/provers/sgx-prover","docId":"guides/running-surge/provers/sgx-prover","unlisted":false},{"type":"link","label":"Deploy RISC0 Prover","href":"/docs/guides/running-surge/provers/risc0-prover","docId":"guides/running-surge/provers/risc0-prover","unlisted":false},{"type":"link","label":"Deploy SP1 Prover","href":"/docs/guides/running-surge/provers/sp1-prover","docId":"guides/running-surge/provers/sp1-prover","unlisted":false}],"href":"/docs/guides/running-surge/provers/"},{"type":"link","label":"Deploy L2","href":"/docs/guides/running-surge/deploy-l2","docId":"guides/running-surge/deploy-l2","unlisted":false},{"type":"link","label":"Deploy Protocols on L2","href":"/docs/guides/running-surge/deploy-l2-protocols","docId":"guides/running-surge/deploy-l2-protocols","unlisted":false},{"type":"link","label":"Deploy Relayer","href":"/docs/guides/running-surge/deploy-relayer","docId":"guides/running-surge/deploy-relayer","unlisted":false},{"type":"link","label":"Deploy Bridge UI","href":"/docs/guides/running-surge/deploy-bridge-ui","docId":"guides/running-surge/deploy-bridge-ui","unlisted":false}],"href":"/docs/guides/running-surge/"},{"type":"link","label":"Deploying your DApp on Surge","href":"/docs/guides/deploy-on-surge","docId":"guides/deploy-on-surge","unlisted":false}]},{"type":"category","label":"Troubleshooting","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Error Codes","href":"/docs/troubleshooting/error-codes","docId":"troubleshooting/error-codes","unlisted":false},{"type":"link","label":"Common Devnet Issues","href":"/docs/troubleshooting/common-devnet-issues","docId":"troubleshooting/common-devnet-issues","unlisted":false}],"href":"/docs/troubleshooting/"}]},"docs":{"about/architecture":{"id":"about/architecture","title":"Surge Architecture","description":"Surge Architecture","sidebar":"tutorialSidebar"},"about/based-rollups":{"id":"about/based-rollups","title":"Based Rollups","description":"What Are Based Rollups, and Why Do They Matter?","sidebar":"tutorialSidebar"},"about/nethermind":{"id":"about/nethermind","title":"Surge & Nethermind Client","description":"Surge leverages Nethermind Client as its primary Ethereum execution client. Nethermind Client is a high-performance client designed for speed, efficiency, and reliability \u2013 all essential qualities for any rollup aiming to process transactions at scale.","sidebar":"tutorialSidebar"},"about/stage-2":{"id":"about/stage-2","title":"Fully Decentralized From Day 1","description":"Surge stands out by embracing a Stage 2 governance model from the very beginning, referencing the L2Beat\u2019s \u201cStages\u201d framework that evaluates rollup maturity. By focusing on immutability and self-executing code, Surge mitigates governance risks commonly seen in other rollups where multi-sigs or admin keys can push upgrades before users can fully withdraw their funds.","sidebar":"tutorialSidebar"},"guides/deploy-on-surge":{"id":"guides/deploy-on-surge","title":"Deploying your DApp on Surge","description":"To deploy your DApp on Surge follow these steps:","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-bridge-ui":{"id":"guides/running-surge/deploy-bridge-ui","title":"Deploy Bridge UI","description":"The Bridge UI is the user-facing interface for transferring assets between Layer 1 and Layer 2, enabling seamless interaction with Surge\u2019s cross-chain functionality. It relies on the underlying Relayer and smart contracts to facilitate these transfers securely.","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-l1":{"id":"guides/running-surge/deploy-l1","title":"Deploy L1","description":"In blockchain technology, a Layer 1 network refers to the base protocol, such as Ethereum or Bitcoin, that operates independently to process and finalize transactions. For the Surge development network, establishing an L1 environment is essential because it serves as the foundational layer where the Taiko protocol is deployed. This setup is crucial for launching and operating the Surge Layer 2 network, as L2 solutions rely on L1 for security and consensus.","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-l1-protocols":{"id":"guides/running-surge/deploy-l1-protocols","title":"Deploy Protocols on L1","description":"If you\'re using the Kurtosis Package to deploy L1, you can skip this section.","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-l2":{"id":"guides/running-surge/deploy-l2","title":"Deploy L2","description":"A Layer 2 network builds on top of Layer 1 to increase scalability and reduce transaction costs, while still inheriting L1\u2019s security. For Surge, the L2 network is where user transactions are executed and blocks are proposed and proven.","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-l2-protocols":{"id":"guides/running-surge/deploy-l2-protocols","title":"Deploy Protocols on L2","description":"This guide provides detailed steps for deploying and configuring the Bridge, Signal Service, and ERC20 Vault protocols on Layer 2.","sidebar":"tutorialSidebar"},"guides/running-surge/deploy-relayer":{"id":"guides/running-surge/deploy-relayer","title":"Deploy Relayer","description":"The Relayer is a key component that facilitates cross-layer communication between Layer 1 and Layer 2, such as submitting proofs or syncing finalized state. It ensures that Surge\u2019s L2 state transitions are correctly reflected and verified on L1.","sidebar":"tutorialSidebar"},"guides/running-surge/prepare-l2-genesis":{"id":"guides/running-surge/prepare-l2-genesis","title":"Prepare L2 Genesis","description":"If you\'re using simple-surge-node to deploy L2, you can skip this section since simple-surge-node repository already includes a ready-to-use chainspec.json file.","sidebar":"tutorialSidebar"},"guides/running-surge/provers/index":{"id":"guides/running-surge/provers/index","title":"Set up a Prover","description":"You can skip launching provers in a local devnet if you only want to test basic transaction flow and block proposals. However, without all three provers:","sidebar":"tutorialSidebar"},"guides/running-surge/provers/risc0-prover":{"id":"guides/running-surge/provers/risc0-prover","title":"Deploy RISC0 Prover","description":"Prerequisites","sidebar":"tutorialSidebar"},"guides/running-surge/provers/sgx-prover":{"id":"guides/running-surge/provers/sgx-prover","title":"Deploy SGX Prover","description":"Prerequisites","sidebar":"tutorialSidebar"},"guides/running-surge/provers/sp1-prover":{"id":"guides/running-surge/provers/sp1-prover","title":"Deploy SP1 Prover","description":"Prerequisites","sidebar":"tutorialSidebar"},"guides/running-surge/running-surge":{"id":"guides/running-surge/running-surge","title":"Run your own Surge Devnet","description":"This guide walks you through setting up and running your own Surge rollup development network.","sidebar":"tutorialSidebar"},"guides/surge-on-hoodi/surge-on-hoodi":{"id":"guides/surge-on-hoodi/surge-on-hoodi","title":"Run Surge on Hoodi","description":"","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction to Surge","description":"Surge is a high-performance, based rollup template built on a modified Taiko stack that embodies Ethereum\'s principles of decentralization, security, and censorship resistance. Developed by Nethermind as a research and experimentation platform, Surge demonstrates what\'s possible when rollups maximize both performance and trustlessness without compromising on security.","sidebar":"tutorialSidebar"},"troubleshooting/common-devnet-issues":{"id":"troubleshooting/common-devnet-issues","title":"Common Devnet Issues","description":"This page contains common issues while setting up the devnet and their solutions.","sidebar":"tutorialSidebar"},"troubleshooting/error-codes":{"id":"troubleshooting/error-codes","title":"Error Codes","description":"This page contains a comprehensive list of error codes used in protocols. These codes are automatically generated from the source code.","sidebar":"tutorialSidebar"},"troubleshooting/index":{"id":"troubleshooting/index","title":"Troubleshooting","description":"Find solutions and guidance for common issues when working with Surge.","sidebar":"tutorialSidebar"}}}}')}}]);