"use strict";(self.webpackChunksurge_docs=self.webpackChunksurge_docs||[]).push([[799],{9813:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var n=i(4848),r=i(8453);const s={sidebar_position:3,title:"Surge & Nethermind"},o="Surge & Nethermind",c={id:"About/nethermind",title:"Surge & Nethermind",description:"Surge leverages Nethermind as its primary Ethereum execution client. Nethermind is a high-performance client designed for speed, efficiency, and reliability \u2013 all essential qualities for any rollup aiming to process transactions at scale.",source:"@site/docs/About/nethermind.md",sourceDirName:"About",slug:"/About/nethermind",permalink:"/docs/About/nethermind",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/surge/tree/main/docs/docs/About/nethermind.md",tags:[],version:"current",lastUpdatedAt:1742473541e3,sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Surge & Nethermind"},sidebar:"tutorialSidebar",previous:{title:"Stage 2",permalink:"/docs/About/stage-2"},next:{title:"Surge Architecture",permalink:"/docs/About/architecture"}},a={},d=[{value:"Why Nethermind?",id:"why-nethermind",level:2},{value:"Benefits for Surge",id:"benefits-for-surge",level:2},{value:"Faster Block Execution",id:"faster-block-execution",level:3},{value:"Optimized Resource Usage",id:"optimized-resource-usage",level:3}];function l(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"surge--nethermind",children:"Surge & Nethermind"})}),"\n",(0,n.jsxs)(t.p,{children:["Surge leverages ",(0,n.jsx)(t.a,{href:"https://www.nethermind.io/nethermind-client",children:"Nethermind"})," as its primary Ethereum execution client. Nethermind is a high-performance client designed for speed, efficiency, and reliability \u2013 all essential qualities for any rollup aiming to process transactions at scale."]}),"\n",(0,n.jsx)(t.h2,{id:"why-nethermind",children:"Why Nethermind?"}),"\n",(0,n.jsx)(t.p,{children:"Nethermind stands out for its:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"High Performance:"})," Built for gigagas throughput (as showcased in ",(0,n.jsx)(t.a,{href:"https://github.com/NethermindEth/nethermind/releases/tag/1.30.0",children:"Nethermind v1.30.0"}),"), the client ensures quick transaction processing."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Efficient Resource Utilization:"})," Nethermind\u2019s optimized architecture helps reduce overhead, enabling Surge to handle large volumes of transactions without excessive costs."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Robust Ethereum Compatibility:"})," As a proven client in the Ethereum ecosystem, Nethermind aligns perfectly with Surge\u2019s rollup strategy, ensuring reliable execution for developers and end users."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"benefits-for-surge",children:"Benefits for Surge"}),"\n",(0,n.jsx)(t.p,{children:"By integrating Nethermind, Surge achieves:"}),"\n",(0,n.jsx)(t.h3,{id:"faster-block-execution",children:"Faster Block Execution"}),"\n",(0,n.jsx)(t.p,{children:"Transactions confirm faster due to Nethermind\u2019s streamlined execution approach. This leads to improved user experiences and lower latency for dApps built on Surge."}),"\n",(0,n.jsx)(t.h3,{id:"optimized-resource-usage",children:"Optimized Resource Usage"}),"\n",(0,n.jsx)(t.p,{children:"Nethermind\u2019s low-overhead design allows Surge to process more transactions without incurring higher execution costs. This efficiency is crucial for maintaining a decentralized and cost-effective rollup."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var n=i(6540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);